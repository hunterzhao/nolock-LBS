// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace lbs {
class AddReqProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddReqProto> {
} _AddReqProto_default_instance_;
class SearchReqProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SearchReqProto> {
} _SearchReqProto_default_instance_;
class ReqProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReqProto> {
} _ReqProto_default_instance_;
class AddResProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddResProto> {
} _AddResProto_default_instance_;
class NearFriendDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NearFriend> {
} _NearFriend_default_instance_;
class SearchResProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SearchResProto> {
} _SearchResProto_default_instance_;
class ResProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ResProto> {
} _ResProto_default_instance_;

namespace protobuf_message_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddReqProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddReqProto, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddReqProto, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchReqProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchReqProto, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchReqProto, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchReqProto, redius_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqProto, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqProto, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqProto, addreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqProto, searchreq_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddResProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearFriend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearFriend, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearFriend, dist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearFriend, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearFriend, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchResProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchResProto, friends_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResProto, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResProto, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResProto, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResProto, addres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResProto, searchres_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(AddReqProto)},
  { 7, -1, sizeof(SearchReqProto)},
  { 15, -1, sizeof(ReqProto)},
  { 24, -1, sizeof(AddResProto)},
  { 29, -1, sizeof(NearFriend)},
  { 38, -1, sizeof(SearchResProto)},
  { 44, -1, sizeof(ResProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddReqProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SearchReqProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReqProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddResProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NearFriend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SearchResProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResProto_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace

void TableStruct::Shutdown() {
  _AddReqProto_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _SearchReqProto_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ReqProto_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _AddResProto_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _NearFriend_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _SearchResProto_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _ResProto_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _AddReqProto_default_instance_.DefaultConstruct();
  _SearchReqProto_default_instance_.DefaultConstruct();
  _ReqProto_default_instance_.DefaultConstruct();
  _AddResProto_default_instance_.DefaultConstruct();
  _NearFriend_default_instance_.DefaultConstruct();
  _SearchResProto_default_instance_.DefaultConstruct();
  _ResProto_default_instance_.DefaultConstruct();
  _ReqProto_default_instance_.get_mutable()->addreq_ = const_cast< ::lbs::AddReqProto*>(
      ::lbs::AddReqProto::internal_default_instance());
  _ReqProto_default_instance_.get_mutable()->searchreq_ = const_cast< ::lbs::SearchReqProto*>(
      ::lbs::SearchReqProto::internal_default_instance());
  _ResProto_default_instance_.get_mutable()->addres_ = const_cast< ::lbs::AddResProto*>(
      ::lbs::AddResProto::internal_default_instance());
  _ResProto_default_instance_.get_mutable()->searchres_ = const_cast< ::lbs::SearchResProto*>(
      ::lbs::SearchResProto::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rmessage.proto\022\003lbs\"#\n\013AddReqProto\022\t\n\001x"
      "\030\003 \001(\001\022\t\n\001y\030\004 \001(\001\"6\n\016SearchReqProto\022\t\n\001x"
      "\030\003 \001(\001\022\t\n\001y\030\004 \001(\001\022\016\n\006redius\030\005 \001(\001\"n\n\010Req"
      "Proto\022\014\n\004type\030\001 \001(\005\022\n\n\002id\030\002 \001(\005\022 \n\006addre"
      "q\030\003 \001(\0132\020.lbs.AddReqProto\022&\n\tsearchreq\030\004"
      " \001(\0132\023.lbs.SearchReqProto\"\r\n\013AddResProto"
      "\"<\n\nNearFriend\022\n\n\002id\030\001 \001(\005\022\014\n\004dist\030\002 \001(\001"
      "\022\t\n\001x\030\003 \001(\001\022\t\n\001y\030\004 \001(\001\"2\n\016SearchResProto"
      "\022 \n\007friends\030\001 \003(\0132\017.lbs.NearFriend\"|\n\010Re"
      "sProto\022\014\n\004type\030\001 \001(\005\022\n\n\002id\030\002 \001(\005\022\014\n\004code"
      "\030\003 \001(\005\022 \n\006addres\030\004 \001(\0132\020.lbs.AddResProto"
      "\022&\n\tsearchres\030\005 \001(\0132\023.lbs.SearchResProto"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 488);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_message_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddReqProto::kXFieldNumber;
const int AddReqProto::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddReqProto::AddReqProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lbs.AddReqProto)
}
AddReqProto::AddReqProto(const AddReqProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:lbs.AddReqProto)
}

void AddReqProto::SharedCtor() {
  ::memset(&x_, 0, reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
  _cached_size_ = 0;
}

AddReqProto::~AddReqProto() {
  // @@protoc_insertion_point(destructor:lbs.AddReqProto)
  SharedDtor();
}

void AddReqProto::SharedDtor() {
}

void AddReqProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddReqProto::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddReqProto& AddReqProto::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddReqProto* AddReqProto::New(::google::protobuf::Arena* arena) const {
  AddReqProto* n = new AddReqProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddReqProto::Clear() {
// @@protoc_insertion_point(message_clear_start:lbs.AddReqProto)
  ::memset(&x_, 0, reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
}

bool AddReqProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lbs.AddReqProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lbs.AddReqProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lbs.AddReqProto)
  return false;
#undef DO_
}

void AddReqProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lbs.AddReqProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 3;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->x(), output);
  }

  // double y = 4;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->y(), output);
  }

  // @@protoc_insertion_point(serialize_end:lbs.AddReqProto)
}

::google::protobuf::uint8* AddReqProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:lbs.AddReqProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 3;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->x(), target);
  }

  // double y = 4;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->y(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:lbs.AddReqProto)
  return target;
}

size_t AddReqProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lbs.AddReqProto)
  size_t total_size = 0;

  // double x = 3;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 4;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddReqProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lbs.AddReqProto)
  GOOGLE_DCHECK_NE(&from, this);
  const AddReqProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddReqProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lbs.AddReqProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lbs.AddReqProto)
    MergeFrom(*source);
  }
}

void AddReqProto::MergeFrom(const AddReqProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lbs.AddReqProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void AddReqProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lbs.AddReqProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddReqProto::CopyFrom(const AddReqProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lbs.AddReqProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddReqProto::IsInitialized() const {
  return true;
}

void AddReqProto::Swap(AddReqProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddReqProto::InternalSwap(AddReqProto* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddReqProto::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddReqProto

// double x = 3;
void AddReqProto::clear_x() {
  x_ = 0;
}
double AddReqProto::x() const {
  // @@protoc_insertion_point(field_get:lbs.AddReqProto.x)
  return x_;
}
void AddReqProto::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:lbs.AddReqProto.x)
}

// double y = 4;
void AddReqProto::clear_y() {
  y_ = 0;
}
double AddReqProto::y() const {
  // @@protoc_insertion_point(field_get:lbs.AddReqProto.y)
  return y_;
}
void AddReqProto::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:lbs.AddReqProto.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchReqProto::kXFieldNumber;
const int SearchReqProto::kYFieldNumber;
const int SearchReqProto::kRediusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchReqProto::SearchReqProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lbs.SearchReqProto)
}
SearchReqProto::SearchReqProto(const SearchReqProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&redius_) -
    reinterpret_cast<char*>(&x_) + sizeof(redius_));
  // @@protoc_insertion_point(copy_constructor:lbs.SearchReqProto)
}

void SearchReqProto::SharedCtor() {
  ::memset(&x_, 0, reinterpret_cast<char*>(&redius_) -
    reinterpret_cast<char*>(&x_) + sizeof(redius_));
  _cached_size_ = 0;
}

SearchReqProto::~SearchReqProto() {
  // @@protoc_insertion_point(destructor:lbs.SearchReqProto)
  SharedDtor();
}

void SearchReqProto::SharedDtor() {
}

void SearchReqProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchReqProto::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchReqProto& SearchReqProto::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

SearchReqProto* SearchReqProto::New(::google::protobuf::Arena* arena) const {
  SearchReqProto* n = new SearchReqProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchReqProto::Clear() {
// @@protoc_insertion_point(message_clear_start:lbs.SearchReqProto)
  ::memset(&x_, 0, reinterpret_cast<char*>(&redius_) -
    reinterpret_cast<char*>(&x_) + sizeof(redius_));
}

bool SearchReqProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lbs.SearchReqProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double redius = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &redius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lbs.SearchReqProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lbs.SearchReqProto)
  return false;
#undef DO_
}

void SearchReqProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lbs.SearchReqProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 3;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->x(), output);
  }

  // double y = 4;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->y(), output);
  }

  // double redius = 5;
  if (this->redius() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->redius(), output);
  }

  // @@protoc_insertion_point(serialize_end:lbs.SearchReqProto)
}

::google::protobuf::uint8* SearchReqProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:lbs.SearchReqProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 3;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->x(), target);
  }

  // double y = 4;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->y(), target);
  }

  // double redius = 5;
  if (this->redius() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->redius(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:lbs.SearchReqProto)
  return target;
}

size_t SearchReqProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lbs.SearchReqProto)
  size_t total_size = 0;

  // double x = 3;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 4;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double redius = 5;
  if (this->redius() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchReqProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lbs.SearchReqProto)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchReqProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchReqProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lbs.SearchReqProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lbs.SearchReqProto)
    MergeFrom(*source);
  }
}

void SearchReqProto::MergeFrom(const SearchReqProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lbs.SearchReqProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.redius() != 0) {
    set_redius(from.redius());
  }
}

void SearchReqProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lbs.SearchReqProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchReqProto::CopyFrom(const SearchReqProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lbs.SearchReqProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchReqProto::IsInitialized() const {
  return true;
}

void SearchReqProto::Swap(SearchReqProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchReqProto::InternalSwap(SearchReqProto* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(redius_, other->redius_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchReqProto::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchReqProto

// double x = 3;
void SearchReqProto::clear_x() {
  x_ = 0;
}
double SearchReqProto::x() const {
  // @@protoc_insertion_point(field_get:lbs.SearchReqProto.x)
  return x_;
}
void SearchReqProto::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:lbs.SearchReqProto.x)
}

// double y = 4;
void SearchReqProto::clear_y() {
  y_ = 0;
}
double SearchReqProto::y() const {
  // @@protoc_insertion_point(field_get:lbs.SearchReqProto.y)
  return y_;
}
void SearchReqProto::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:lbs.SearchReqProto.y)
}

// double redius = 5;
void SearchReqProto::clear_redius() {
  redius_ = 0;
}
double SearchReqProto::redius() const {
  // @@protoc_insertion_point(field_get:lbs.SearchReqProto.redius)
  return redius_;
}
void SearchReqProto::set_redius(double value) {
  
  redius_ = value;
  // @@protoc_insertion_point(field_set:lbs.SearchReqProto.redius)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqProto::kTypeFieldNumber;
const int ReqProto::kIdFieldNumber;
const int ReqProto::kAddreqFieldNumber;
const int ReqProto::kSearchreqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqProto::ReqProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lbs.ReqProto)
}
ReqProto::ReqProto(const ReqProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_addreq()) {
    addreq_ = new ::lbs::AddReqProto(*from.addreq_);
  } else {
    addreq_ = NULL;
  }
  if (from.has_searchreq()) {
    searchreq_ = new ::lbs::SearchReqProto(*from.searchreq_);
  } else {
    searchreq_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&type_) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:lbs.ReqProto)
}

void ReqProto::SharedCtor() {
  ::memset(&addreq_, 0, reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&addreq_) + sizeof(id_));
  _cached_size_ = 0;
}

ReqProto::~ReqProto() {
  // @@protoc_insertion_point(destructor:lbs.ReqProto)
  SharedDtor();
}

void ReqProto::SharedDtor() {
  if (this != internal_default_instance()) {
    delete addreq_;
  }
  if (this != internal_default_instance()) {
    delete searchreq_;
  }
}

void ReqProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqProto::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqProto& ReqProto::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReqProto* ReqProto::New(::google::protobuf::Arena* arena) const {
  ReqProto* n = new ReqProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqProto::Clear() {
// @@protoc_insertion_point(message_clear_start:lbs.ReqProto)
  if (GetArenaNoVirtual() == NULL && addreq_ != NULL) {
    delete addreq_;
  }
  addreq_ = NULL;
  if (GetArenaNoVirtual() == NULL && searchreq_ != NULL) {
    delete searchreq_;
  }
  searchreq_ = NULL;
  ::memset(&type_, 0, reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&type_) + sizeof(id_));
}

bool ReqProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lbs.ReqProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .lbs.AddReqProto addreq = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addreq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .lbs.SearchReqProto searchreq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_searchreq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lbs.ReqProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lbs.ReqProto)
  return false;
#undef DO_
}

void ReqProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lbs.ReqProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // .lbs.AddReqProto addreq = 3;
  if (this->has_addreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->addreq_, output);
  }

  // .lbs.SearchReqProto searchreq = 4;
  if (this->has_searchreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->searchreq_, output);
  }

  // @@protoc_insertion_point(serialize_end:lbs.ReqProto)
}

::google::protobuf::uint8* ReqProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:lbs.ReqProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // .lbs.AddReqProto addreq = 3;
  if (this->has_addreq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->addreq_, deterministic, target);
  }

  // .lbs.SearchReqProto searchreq = 4;
  if (this->has_searchreq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->searchreq_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:lbs.ReqProto)
  return target;
}

size_t ReqProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lbs.ReqProto)
  size_t total_size = 0;

  // .lbs.AddReqProto addreq = 3;
  if (this->has_addreq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->addreq_);
  }

  // .lbs.SearchReqProto searchreq = 4;
  if (this->has_searchreq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->searchreq_);
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lbs.ReqProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lbs.ReqProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lbs.ReqProto)
    MergeFrom(*source);
  }
}

void ReqProto::MergeFrom(const ReqProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lbs.ReqProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_addreq()) {
    mutable_addreq()->::lbs::AddReqProto::MergeFrom(from.addreq());
  }
  if (from.has_searchreq()) {
    mutable_searchreq()->::lbs::SearchReqProto::MergeFrom(from.searchreq());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void ReqProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lbs.ReqProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqProto::CopyFrom(const ReqProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lbs.ReqProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqProto::IsInitialized() const {
  return true;
}

void ReqProto::Swap(ReqProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqProto::InternalSwap(ReqProto* other) {
  std::swap(addreq_, other->addreq_);
  std::swap(searchreq_, other->searchreq_);
  std::swap(type_, other->type_);
  std::swap(id_, other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqProto::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqProto

// int32 type = 1;
void ReqProto::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 ReqProto::type() const {
  // @@protoc_insertion_point(field_get:lbs.ReqProto.type)
  return type_;
}
void ReqProto::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:lbs.ReqProto.type)
}

// int32 id = 2;
void ReqProto::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 ReqProto::id() const {
  // @@protoc_insertion_point(field_get:lbs.ReqProto.id)
  return id_;
}
void ReqProto::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:lbs.ReqProto.id)
}

// .lbs.AddReqProto addreq = 3;
bool ReqProto::has_addreq() const {
  return this != internal_default_instance() && addreq_ != NULL;
}
void ReqProto::clear_addreq() {
  if (GetArenaNoVirtual() == NULL && addreq_ != NULL) delete addreq_;
  addreq_ = NULL;
}
const ::lbs::AddReqProto& ReqProto::addreq() const {
  // @@protoc_insertion_point(field_get:lbs.ReqProto.addreq)
  return addreq_ != NULL ? *addreq_
                         : *::lbs::AddReqProto::internal_default_instance();
}
::lbs::AddReqProto* ReqProto::mutable_addreq() {
  
  if (addreq_ == NULL) {
    addreq_ = new ::lbs::AddReqProto;
  }
  // @@protoc_insertion_point(field_mutable:lbs.ReqProto.addreq)
  return addreq_;
}
::lbs::AddReqProto* ReqProto::release_addreq() {
  // @@protoc_insertion_point(field_release:lbs.ReqProto.addreq)
  
  ::lbs::AddReqProto* temp = addreq_;
  addreq_ = NULL;
  return temp;
}
void ReqProto::set_allocated_addreq(::lbs::AddReqProto* addreq) {
  delete addreq_;
  addreq_ = addreq;
  if (addreq) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:lbs.ReqProto.addreq)
}

// .lbs.SearchReqProto searchreq = 4;
bool ReqProto::has_searchreq() const {
  return this != internal_default_instance() && searchreq_ != NULL;
}
void ReqProto::clear_searchreq() {
  if (GetArenaNoVirtual() == NULL && searchreq_ != NULL) delete searchreq_;
  searchreq_ = NULL;
}
const ::lbs::SearchReqProto& ReqProto::searchreq() const {
  // @@protoc_insertion_point(field_get:lbs.ReqProto.searchreq)
  return searchreq_ != NULL ? *searchreq_
                         : *::lbs::SearchReqProto::internal_default_instance();
}
::lbs::SearchReqProto* ReqProto::mutable_searchreq() {
  
  if (searchreq_ == NULL) {
    searchreq_ = new ::lbs::SearchReqProto;
  }
  // @@protoc_insertion_point(field_mutable:lbs.ReqProto.searchreq)
  return searchreq_;
}
::lbs::SearchReqProto* ReqProto::release_searchreq() {
  // @@protoc_insertion_point(field_release:lbs.ReqProto.searchreq)
  
  ::lbs::SearchReqProto* temp = searchreq_;
  searchreq_ = NULL;
  return temp;
}
void ReqProto::set_allocated_searchreq(::lbs::SearchReqProto* searchreq) {
  delete searchreq_;
  searchreq_ = searchreq;
  if (searchreq) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:lbs.ReqProto.searchreq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddResProto::AddResProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lbs.AddResProto)
}
AddResProto::AddResProto(const AddResProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:lbs.AddResProto)
}

void AddResProto::SharedCtor() {
  _cached_size_ = 0;
}

AddResProto::~AddResProto() {
  // @@protoc_insertion_point(destructor:lbs.AddResProto)
  SharedDtor();
}

void AddResProto::SharedDtor() {
}

void AddResProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddResProto::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddResProto& AddResProto::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddResProto* AddResProto::New(::google::protobuf::Arena* arena) const {
  AddResProto* n = new AddResProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddResProto::Clear() {
// @@protoc_insertion_point(message_clear_start:lbs.AddResProto)
}

bool AddResProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lbs.AddResProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:lbs.AddResProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lbs.AddResProto)
  return false;
#undef DO_
}

void AddResProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lbs.AddResProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:lbs.AddResProto)
}

::google::protobuf::uint8* AddResProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:lbs.AddResProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:lbs.AddResProto)
  return target;
}

size_t AddResProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lbs.AddResProto)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddResProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lbs.AddResProto)
  GOOGLE_DCHECK_NE(&from, this);
  const AddResProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddResProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lbs.AddResProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lbs.AddResProto)
    MergeFrom(*source);
  }
}

void AddResProto::MergeFrom(const AddResProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lbs.AddResProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AddResProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lbs.AddResProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddResProto::CopyFrom(const AddResProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lbs.AddResProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddResProto::IsInitialized() const {
  return true;
}

void AddResProto::Swap(AddResProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddResProto::InternalSwap(AddResProto* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddResProto::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddResProto

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NearFriend::kIdFieldNumber;
const int NearFriend::kDistFieldNumber;
const int NearFriend::kXFieldNumber;
const int NearFriend::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NearFriend::NearFriend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lbs.NearFriend)
}
NearFriend::NearFriend(const NearFriend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dist_, &from.dist_,
    reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&dist_) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:lbs.NearFriend)
}

void NearFriend::SharedCtor() {
  ::memset(&dist_, 0, reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&dist_) + sizeof(id_));
  _cached_size_ = 0;
}

NearFriend::~NearFriend() {
  // @@protoc_insertion_point(destructor:lbs.NearFriend)
  SharedDtor();
}

void NearFriend::SharedDtor() {
}

void NearFriend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NearFriend::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NearFriend& NearFriend::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

NearFriend* NearFriend::New(::google::protobuf::Arena* arena) const {
  NearFriend* n = new NearFriend;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NearFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:lbs.NearFriend)
  ::memset(&dist_, 0, reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&dist_) + sizeof(id_));
}

bool NearFriend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lbs.NearFriend)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dist = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lbs.NearFriend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lbs.NearFriend)
  return false;
#undef DO_
}

void NearFriend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lbs.NearFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // double dist = 2;
  if (this->dist() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->dist(), output);
  }

  // double x = 3;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->x(), output);
  }

  // double y = 4;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->y(), output);
  }

  // @@protoc_insertion_point(serialize_end:lbs.NearFriend)
}

::google::protobuf::uint8* NearFriend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:lbs.NearFriend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // double dist = 2;
  if (this->dist() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->dist(), target);
  }

  // double x = 3;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->x(), target);
  }

  // double y = 4;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->y(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:lbs.NearFriend)
  return target;
}

size_t NearFriend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lbs.NearFriend)
  size_t total_size = 0;

  // double dist = 2;
  if (this->dist() != 0) {
    total_size += 1 + 8;
  }

  // double x = 3;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 4;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NearFriend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lbs.NearFriend)
  GOOGLE_DCHECK_NE(&from, this);
  const NearFriend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NearFriend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lbs.NearFriend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lbs.NearFriend)
    MergeFrom(*source);
  }
}

void NearFriend::MergeFrom(const NearFriend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lbs.NearFriend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dist() != 0) {
    set_dist(from.dist());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void NearFriend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lbs.NearFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NearFriend::CopyFrom(const NearFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lbs.NearFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NearFriend::IsInitialized() const {
  return true;
}

void NearFriend::Swap(NearFriend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NearFriend::InternalSwap(NearFriend* other) {
  std::swap(dist_, other->dist_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(id_, other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NearFriend::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NearFriend

// int32 id = 1;
void NearFriend::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 NearFriend::id() const {
  // @@protoc_insertion_point(field_get:lbs.NearFriend.id)
  return id_;
}
void NearFriend::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:lbs.NearFriend.id)
}

// double dist = 2;
void NearFriend::clear_dist() {
  dist_ = 0;
}
double NearFriend::dist() const {
  // @@protoc_insertion_point(field_get:lbs.NearFriend.dist)
  return dist_;
}
void NearFriend::set_dist(double value) {
  
  dist_ = value;
  // @@protoc_insertion_point(field_set:lbs.NearFriend.dist)
}

// double x = 3;
void NearFriend::clear_x() {
  x_ = 0;
}
double NearFriend::x() const {
  // @@protoc_insertion_point(field_get:lbs.NearFriend.x)
  return x_;
}
void NearFriend::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:lbs.NearFriend.x)
}

// double y = 4;
void NearFriend::clear_y() {
  y_ = 0;
}
double NearFriend::y() const {
  // @@protoc_insertion_point(field_get:lbs.NearFriend.y)
  return y_;
}
void NearFriend::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:lbs.NearFriend.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchResProto::kFriendsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchResProto::SearchResProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lbs.SearchResProto)
}
SearchResProto::SearchResProto(const SearchResProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friends_(from.friends_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:lbs.SearchResProto)
}

void SearchResProto::SharedCtor() {
  _cached_size_ = 0;
}

SearchResProto::~SearchResProto() {
  // @@protoc_insertion_point(destructor:lbs.SearchResProto)
  SharedDtor();
}

void SearchResProto::SharedDtor() {
}

void SearchResProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchResProto::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchResProto& SearchResProto::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

SearchResProto* SearchResProto::New(::google::protobuf::Arena* arena) const {
  SearchResProto* n = new SearchResProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchResProto::Clear() {
// @@protoc_insertion_point(message_clear_start:lbs.SearchResProto)
  friends_.Clear();
}

bool SearchResProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lbs.SearchResProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .lbs.NearFriend friends = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lbs.SearchResProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lbs.SearchResProto)
  return false;
#undef DO_
}

void SearchResProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lbs.SearchResProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .lbs.NearFriend friends = 1;
  for (unsigned int i = 0, n = this->friends_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friends(i), output);
  }

  // @@protoc_insertion_point(serialize_end:lbs.SearchResProto)
}

::google::protobuf::uint8* SearchResProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:lbs.SearchResProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .lbs.NearFriend friends = 1;
  for (unsigned int i = 0, n = this->friends_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->friends(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:lbs.SearchResProto)
  return target;
}

size_t SearchResProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lbs.SearchResProto)
  size_t total_size = 0;

  // repeated .lbs.NearFriend friends = 1;
  {
    unsigned int count = this->friends_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friends(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchResProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lbs.SearchResProto)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchResProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchResProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lbs.SearchResProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lbs.SearchResProto)
    MergeFrom(*source);
  }
}

void SearchResProto::MergeFrom(const SearchResProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lbs.SearchResProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friends_.MergeFrom(from.friends_);
}

void SearchResProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lbs.SearchResProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchResProto::CopyFrom(const SearchResProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lbs.SearchResProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchResProto::IsInitialized() const {
  return true;
}

void SearchResProto::Swap(SearchResProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchResProto::InternalSwap(SearchResProto* other) {
  friends_.InternalSwap(&other->friends_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchResProto::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchResProto

// repeated .lbs.NearFriend friends = 1;
int SearchResProto::friends_size() const {
  return friends_.size();
}
void SearchResProto::clear_friends() {
  friends_.Clear();
}
const ::lbs::NearFriend& SearchResProto::friends(int index) const {
  // @@protoc_insertion_point(field_get:lbs.SearchResProto.friends)
  return friends_.Get(index);
}
::lbs::NearFriend* SearchResProto::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:lbs.SearchResProto.friends)
  return friends_.Mutable(index);
}
::lbs::NearFriend* SearchResProto::add_friends() {
  // @@protoc_insertion_point(field_add:lbs.SearchResProto.friends)
  return friends_.Add();
}
::google::protobuf::RepeatedPtrField< ::lbs::NearFriend >*
SearchResProto::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:lbs.SearchResProto.friends)
  return &friends_;
}
const ::google::protobuf::RepeatedPtrField< ::lbs::NearFriend >&
SearchResProto::friends() const {
  // @@protoc_insertion_point(field_list:lbs.SearchResProto.friends)
  return friends_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResProto::kTypeFieldNumber;
const int ResProto::kIdFieldNumber;
const int ResProto::kCodeFieldNumber;
const int ResProto::kAddresFieldNumber;
const int ResProto::kSearchresFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResProto::ResProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lbs.ResProto)
}
ResProto::ResProto(const ResProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_addres()) {
    addres_ = new ::lbs::AddResProto(*from.addres_);
  } else {
    addres_ = NULL;
  }
  if (from.has_searchres()) {
    searchres_ = new ::lbs::SearchResProto(*from.searchres_);
  } else {
    searchres_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&type_) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:lbs.ResProto)
}

void ResProto::SharedCtor() {
  ::memset(&addres_, 0, reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&addres_) + sizeof(code_));
  _cached_size_ = 0;
}

ResProto::~ResProto() {
  // @@protoc_insertion_point(destructor:lbs.ResProto)
  SharedDtor();
}

void ResProto::SharedDtor() {
  if (this != internal_default_instance()) {
    delete addres_;
  }
  if (this != internal_default_instance()) {
    delete searchres_;
  }
}

void ResProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResProto::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResProto& ResProto::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResProto* ResProto::New(::google::protobuf::Arena* arena) const {
  ResProto* n = new ResProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResProto::Clear() {
// @@protoc_insertion_point(message_clear_start:lbs.ResProto)
  if (GetArenaNoVirtual() == NULL && addres_ != NULL) {
    delete addres_;
  }
  addres_ = NULL;
  if (GetArenaNoVirtual() == NULL && searchres_ != NULL) {
    delete searchres_;
  }
  searchres_ = NULL;
  ::memset(&type_, 0, reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&type_) + sizeof(code_));
}

bool ResProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lbs.ResProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .lbs.AddResProto addres = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .lbs.SearchResProto searchres = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_searchres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lbs.ResProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lbs.ResProto)
  return false;
#undef DO_
}

void ResProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lbs.ResProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // int32 code = 3;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->code(), output);
  }

  // .lbs.AddResProto addres = 4;
  if (this->has_addres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->addres_, output);
  }

  // .lbs.SearchResProto searchres = 5;
  if (this->has_searchres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->searchres_, output);
  }

  // @@protoc_insertion_point(serialize_end:lbs.ResProto)
}

::google::protobuf::uint8* ResProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:lbs.ResProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // int32 code = 3;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->code(), target);
  }

  // .lbs.AddResProto addres = 4;
  if (this->has_addres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->addres_, deterministic, target);
  }

  // .lbs.SearchResProto searchres = 5;
  if (this->has_searchres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->searchres_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:lbs.ResProto)
  return target;
}

size_t ResProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lbs.ResProto)
  size_t total_size = 0;

  // .lbs.AddResProto addres = 4;
  if (this->has_addres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->addres_);
  }

  // .lbs.SearchResProto searchres = 5;
  if (this->has_searchres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->searchres_);
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 code = 3;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lbs.ResProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ResProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lbs.ResProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lbs.ResProto)
    MergeFrom(*source);
  }
}

void ResProto::MergeFrom(const ResProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lbs.ResProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_addres()) {
    mutable_addres()->::lbs::AddResProto::MergeFrom(from.addres());
  }
  if (from.has_searchres()) {
    mutable_searchres()->::lbs::SearchResProto::MergeFrom(from.searchres());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void ResProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lbs.ResProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResProto::CopyFrom(const ResProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lbs.ResProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResProto::IsInitialized() const {
  return true;
}

void ResProto::Swap(ResProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResProto::InternalSwap(ResProto* other) {
  std::swap(addres_, other->addres_);
  std::swap(searchres_, other->searchres_);
  std::swap(type_, other->type_);
  std::swap(id_, other->id_);
  std::swap(code_, other->code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResProto::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResProto

// int32 type = 1;
void ResProto::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 ResProto::type() const {
  // @@protoc_insertion_point(field_get:lbs.ResProto.type)
  return type_;
}
void ResProto::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:lbs.ResProto.type)
}

// int32 id = 2;
void ResProto::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 ResProto::id() const {
  // @@protoc_insertion_point(field_get:lbs.ResProto.id)
  return id_;
}
void ResProto::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:lbs.ResProto.id)
}

// int32 code = 3;
void ResProto::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 ResProto::code() const {
  // @@protoc_insertion_point(field_get:lbs.ResProto.code)
  return code_;
}
void ResProto::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:lbs.ResProto.code)
}

// .lbs.AddResProto addres = 4;
bool ResProto::has_addres() const {
  return this != internal_default_instance() && addres_ != NULL;
}
void ResProto::clear_addres() {
  if (GetArenaNoVirtual() == NULL && addres_ != NULL) delete addres_;
  addres_ = NULL;
}
const ::lbs::AddResProto& ResProto::addres() const {
  // @@protoc_insertion_point(field_get:lbs.ResProto.addres)
  return addres_ != NULL ? *addres_
                         : *::lbs::AddResProto::internal_default_instance();
}
::lbs::AddResProto* ResProto::mutable_addres() {
  
  if (addres_ == NULL) {
    addres_ = new ::lbs::AddResProto;
  }
  // @@protoc_insertion_point(field_mutable:lbs.ResProto.addres)
  return addres_;
}
::lbs::AddResProto* ResProto::release_addres() {
  // @@protoc_insertion_point(field_release:lbs.ResProto.addres)
  
  ::lbs::AddResProto* temp = addres_;
  addres_ = NULL;
  return temp;
}
void ResProto::set_allocated_addres(::lbs::AddResProto* addres) {
  delete addres_;
  addres_ = addres;
  if (addres) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:lbs.ResProto.addres)
}

// .lbs.SearchResProto searchres = 5;
bool ResProto::has_searchres() const {
  return this != internal_default_instance() && searchres_ != NULL;
}
void ResProto::clear_searchres() {
  if (GetArenaNoVirtual() == NULL && searchres_ != NULL) delete searchres_;
  searchres_ = NULL;
}
const ::lbs::SearchResProto& ResProto::searchres() const {
  // @@protoc_insertion_point(field_get:lbs.ResProto.searchres)
  return searchres_ != NULL ? *searchres_
                         : *::lbs::SearchResProto::internal_default_instance();
}
::lbs::SearchResProto* ResProto::mutable_searchres() {
  
  if (searchres_ == NULL) {
    searchres_ = new ::lbs::SearchResProto;
  }
  // @@protoc_insertion_point(field_mutable:lbs.ResProto.searchres)
  return searchres_;
}
::lbs::SearchResProto* ResProto::release_searchres() {
  // @@protoc_insertion_point(field_release:lbs.ResProto.searchres)
  
  ::lbs::SearchResProto* temp = searchres_;
  searchres_ = NULL;
  return temp;
}
void ResProto::set_allocated_searchres(::lbs::SearchResProto* searchres) {
  delete searchres_;
  searchres_ = searchres;
  if (searchres) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:lbs.ResProto.searchres)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace lbs

// @@protoc_insertion_point(global_scope)
